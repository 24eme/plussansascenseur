<?php

namespace AppBundle\Repository;

use Doctrine\ODM\MongoDB\DocumentRepository;
use AppBundle\Document\Photo;
use Doctrine\Common\Collections\ArrayCollection;
use GeoJson\Geometry\Point;

/**
 * AttachementRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AscenseurRepository extends DocumentRepository {


	public function findByCoordinates($coordinates, $distance = 100) {
		$coordinates = explode(',', $coordinates);
		if (count($coordinates) != 2) {
			throw new \Exception('Coordonnées géographiques non valides : '.$coordinates);
		}
		$point = new Point(array($coordinates[0]*1, $coordinates[1]*1));
		$query = $this->createQueryBuilder()->field('localisation.coordinates')->near($point)->maxDistance($distance)->getQuery();
		return $query->execute();
	}

	public function saveVersion($ascenseur, $date, $infos, $pseudo) {
        $data = $this->getDocumentManager()->getDocumentCollection(get_class($ascenseur))->findOne(array('_id' => new \MongoId($ascenseur->getId())));
        unset($data['historique']);

		$ascenseur->addEvenement($date, $infos, $pseudo)->setVersion(json_encode($data));
		$this->getDocumentManager()->flush();
	}

    /**
     * Retourne une liste paginée d'ascenseur
     *
     * @param int $limit Le nombre de résultat à retourner
     * @param int $skip Le nombre de résultat à omitter
     */
    public function paginate($limit = 10, $skip = 0)
    {
        return $this->createQueryBuilder()
                      ->readOnly()
                      ->limit($limit)
                      ->skip($skip)
                      ->sort('updatedAt', 'DESC')
                      ->getQuery()
                      ->execute();
    }

    /**
     * Retourne le nombre de documents
     *
     */
    public function count()
    {
        return $this->createQueryBuilder()
                    ->count()
                    ->getQuery()
                    ->execute();
    }
}
